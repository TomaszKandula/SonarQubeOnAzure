name: Build, test and publish (master)

on:
  push:
    branches: [ master ]

jobs:

  versioning:

    runs-on: ubuntu-latest

    outputs:
      outputs1: ${{ steps.versioning.outputs.version }}
      outputs2: ${{ steps.versioning.outputs.published }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0

    - name: Semantic Release (install node.js)
      uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Semantic Release (install dependencies)
      run: |
        npm install --global yarn
        yarn install

    - name: Semantic Release (process changes)
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
    
    - name: Move results to outputs
      id: versioning
      run: |
        echo "::set-output name=version::${{ steps.semantic.outputs.new_release_version }}"
        echo "::set-output name=published::${{ steps.semantic.outputs.new_release_published }}"

  backend-production:

    runs-on: ubuntu-latest
    
    needs: versioning
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2.2.0
    
    - name: Variable substitution appsettings file for Development (NET Core)
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ github.workspace }}/SonarQubeProxy/appsettings.Development.json
      env:
        SonarQube.Server: "${{ secrets.SONARQUBE_HOST }}"
        SonarQube.Token: "${{ secrets.SONARQUBE_CREDENTIAL }}"
        ApplicationPaths.DevelopmentOrigin: "${{ secrets.APPLICATIONPATHS_DEVELOPMENTORIGIN }}"
        ApplicationPaths.DeploymentOrigin: "${{ secrets.APPLICATIONPATHS_DEPLOYMENTORIGIN }}"

    - name: Production | Build Docker (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Production | Build Docker (execute with tests)
      run: docker build -f webapi.dockerfile -t ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-production-${{ github.sha }} .

    - name: Production | Push Docker image (prepare)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        username: ${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}

    - name: Production | Push Docker image
      if: needs.versioning.outputs.outputs2 == 'true'
      run: docker push ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-production-${{ github.sha }}

    # Note: due to a budget constraints, we use separate Azure App Service for staging as the separate slots 
    # are unavailable for B1, B2 and B3 pricing tiers
    - name: Production | Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      if: needs.versioning.outputs.outputs2 == 'true'
      with:
        app-name: tokansonar-proxy
        slot-name: production
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_BACKEND_PROD }}
        images: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}/${{ secrets.DOCKER_REGISTRY_SERVER_USERNAME }}:backend-production-${{ github.sha }}
