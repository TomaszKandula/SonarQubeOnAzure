name: Build & run tests (dev)

on:
  pull_request:
    branches: [ dev ]
    
jobs:

  dev-branch-check:

    runs-on: ubuntu-latest

    env:
      TARGET_DIRECTORY: $PWD/sonarqubecoverage
      COVERAGE_REPORT: $PWD/*/TestResults/*/coverage.cobertura.xml
      SONAR_REPORT: SonarQube.xml

    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Variable substitution appsettings file for Development (.NET)
      uses: TomaszKandula/variable-substitution@v1.0.1
      with:
        files: ${{ github.workspace }}/SonarQubeProxy.Configuration/appsettings.Development.json
      env:
        SonarQube_Server: "${{ secrets.SONARQUBE_HOST }}"
        SonarQube_Token: "${{ secrets.SONARQUBE_CREDENTIAL }}"
        DevelopmentOrigin: "${{ secrets.DEVELOPMENTORIGIN }}"
        DeploymentOrigin: "${{ secrets.DEPLOYMENTORIGIN }}"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: SonarQube begin scan dotnet
      run: |
        dotnet tool install --global dotnet-sonarscanner --version 5.15.0
        dotnet tool update dotnet-reportgenerator-globaltool -g
        dotnet sonarscanner begin \
        /k:${{ secrets.SONARQUBE_PROJECT_KEY }} \
        /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }} \
        /d:sonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        /d:sonar.coverageReportPaths="${{ env.TARGET_DIRECTORY }}/${{ env.SONAR_REPORT }}"

    - name: Build .NET
      run: dotnet build

    - name: Test with the dotnet CLI
      run: |
        dotnet test --no-build --collect:"XPlat Code Coverage"
        mkdir "${{ env.TARGET_DIRECTORY }}"
        reportgenerator "-reports:${{ env.COVERAGE_REPORT }}" "-targetdir:${{ env.TARGET_DIRECTORY }}" "-reporttypes:SonarQube"
      env:
        ASPNETCORE_ENVIRONMENT: Development

    - name: SonarQube end scan dotnet
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONARQUBE_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
